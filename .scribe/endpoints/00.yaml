name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/user/{pubkey}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      pubkey:
        name: pubkey
        description: ''
        required: true
        example: nemo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      pubkey: nemo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pubkey:
        name: pubkey
        description: 'Must not be greater than 64 characters. Must be at least 64 characters.'
        required: true
        example: lezbojyaicziahkacvqvpgoekrczhasmcleavmqydzmebzqlcotmyeyatdympfyqgbherwxvssmsisrwacmkkwimu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      pubkey: lezbojyaicziahkacvqvpgoekrczhasmcleavmqydzmebzqlcotmyeyatdympfyqgbherwxvssmsisrwacmkkwimu
    fileParameters: []
    responses:
      -
        status: 403
        content: '{"pubkey":["The pubkey field must be at least 64 characters."]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user/friends/{pubkey}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      pubkey:
        name: pubkey
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      pubkey: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pubkey:
        name: pubkey
        description: 'Must not be greater than 64 characters. Must be at least 64 characters.'
        required: true
        example: wdrdqjnuhuekzimgkvpfndwdyxraccwvqtpfptqprlcmnzqoiewqqmbejaxtylixwxoevm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      pubkey: wdrdqjnuhuekzimgkvpfndwdyxraccwvqtpfptqprlcmnzqoiewqqmbejaxtylixwxoevm
    fileParameters: []
    responses:
      -
        status: 403
        content: '{"pubkey":["The pubkey field must be at least 64 characters."]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/search
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pubkey:
        name: pubkey
        description: 'Must not be greater than 64 characters. Must be at least 64 characters.'
        required: true
        example: ebumsmvpjrubkokbbveodyfbgpckoivpgayjrhflbmsvtfawlbxnraspokelpgtmjxhwkvvgffpbb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      searchTerm:
        name: searchTerm
        description: 'Must be at least 3 characters.'
        required: true
        example: ckilywctut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 100 characters.'
        required: false
        example: janfprepzm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      pubkey: ebumsmvpjrubkokbbveodyfbgpckoivpgayjrhflbmsvtfawlbxnraspokelpgtmjxhwkvvgffpbb
      searchTerm: ckilywctut
      limit: janfprepzm
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/search/friends
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pubkey:
        name: pubkey
        description: 'Must not be greater than 64 characters. Must be at least 64 characters.'
        required: true
        example: osjbvgcbmlnkdyomwsiabnjxyatyzmrykfbojualwhsevupipyumumqojzueakbgykvzortnnzvhbahculmokzvxcv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      searchTerm:
        name: searchTerm
        description: 'Must be at least 3 characters.'
        required: true
        example: ppupqtfsbayvmtztqrtxgxcvaqqusioljfbu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 100 characters.'
        required: false
        example: znegmsjz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      pubkey: osjbvgcbmlnkdyomwsiabnjxyatyzmrykfbojualwhsevupipyumumqojzueakbgykvzortnnzvhbahculmokzvxcv
      searchTerm: ppupqtfsbayvmtztqrtxgxcvaqqusioljfbu
      limit: znegmsjz
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/search/relays
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      searchTerm:
        name: searchTerm
        description: 'Must be at least 3 characters.'
        required: true
        example: gniezwizligtnqes
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 100 characters.'
        required: false
        example: ndwyjjavbtlpzfhfrvcfgubxv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      searchTerm: gniezwizligtnqes
      limit: ndwyjjavbtlpzfhfrvcfgubxv
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
